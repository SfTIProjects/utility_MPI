###############################################################################
# Copy Files from source folder to subfolders inside a destination subfolders # 
###############################################################################
# Read this Post for runing processis in parallel
# https://stackoverflow.com/questions/42979271/how-to-run-multiple-instances-of-the-same-python-script-which-uses-subprocess-ca
# 
# How to use this program
# srun python cp_files_fm_src_multi_subfolders_to_single_dst_MPI.py -ps path/to/parent/folder -cs path/to/child/folder -d path/dest/to/folder -t xml
#e,g.
# srun python cp_files_fm_src_multi_subfolders_to_single_dst_MPI.py -ps ../my_codesnippet_analysis/CheckStyle2 -cs target -d ../my_codesnippet_analysis/CheckStyle2/checkstylexmlreports_xml -sfn my-javacodeanalysis-app -t xml
# To run it on slum:
# $    sbatch cp_files_fm_src_multi_subfolders_to_single_dst_MPI.sl



import numpy as np
import pandas as pd
from mpi4py import MPI

import subprocess as sp
# what will be used to read files
import glob
import shutil
import os
import re

import argparse

parser = argparse.ArgumentParser(
    description='Run CheckStyle on Java Apps.'
)

parser.add_argument(
     "-sfn",
    "--subfoldername",
    default="bucket",
    type=str, 
    help="Enter the multiple source subfolder name to be generated e.g., buckets will be bucket 0, 1, ..., n."
)

parser.add_argument(
     "-ps",
    "--parentsrc",
    default="",
    type=str, 
    help="The parent source path(s) where the multiple subfolders you want to copy files from (before the autogenerated folders)."
)

parser.add_argument(
     "-cs",
    "--childsrc",
    default="",
    type=str, 
    help="The child source path(s) where the multiple subfolders you want to copy files from (after the autogenerated folders)."
)

parser.add_argument(
     "-d",
    "--dest",
    type=str, 
     help="Destination path where you want to copy file to."
)

parser.add_argument(
     "-t",
    "--filetype",
    type=str,
    help="Enter the type of file e.g. xml, csv, txt, java, py"
)

parser.add_argument(
     "-pt",
    "--pattern",
    default="",
    type=str,
    help="Are there particular pattern of files you want to select."
)


# command -fu ---> sets uf to True
# command --->sets fu to False
#https://stackoverflow.com/questions/60999816/argparse-not-parsing-boolean-arguments
parser.add_argument(
    "-fu",
    "--fileneeduniquename", 
    action="store_true",
    help="File are same, hence needs unique names to be in one folder"
)


args = parser.parse_args()

parent_src_path = args.parentsrc
child_src_path = args.childsrc
dest_path = args.dest
file_type = args.filetype
file_need_unique_name = args.fileneeduniquename
sub_folder_name = args.subfoldername
pattern = args.pattern

    
#Retrieves MPI environment
comm = MPI.COMM_WORLD

#Sets size as the total number of MPI tasks
size = comm.Get_size()

#Sets rank as the specific MPI rank on all MPI tasks
rank = comm.Get_rank()


sub_folder_name_array=[]
sub_folder_name_array = [sub_folder_name for i in range(size)] 

#print(sub_folder_name_array[0:5])

#If the rank is 0 (master) then split filenames equally amoung size groups MPI tasks
if rank == 0:
    split_sub_folder_names = np.array_split(sub_folder_name_array, size, axis = 0)
    
else:
    sub_folder_name_array = None
    split_sub_folder_names = None
    
                                                         
#Scatter the filenames among each MPI task
rank_sub_folder_names = comm.scatter(split_sub_folder_names, root = 0)

####################################################################
# Perform Copy of Multiple Files from Source to Destination
###################################################################

def cp_files_fm_sorce_wt_multi_subfolders_to_single_dst_folder():
    
    for rank_sub_folder_name in rank_sub_folder_names:
    
        # derive the unique folder name of the sub folder to be created
        # comprising of the genericname and the rank number
        # e.g. bucket0, bucket1, ..., bucketn
        derive_sub_folder_unique_name = '{}{}'.format(rank_sub_folder_name, rank)
        
        
        #print('>> {}'.format(derive_sub_folder_unique_name))
    
        #src_dir = '../my_codesnippet_analysis/CheckStyle2/my-javacodeanalysis-app0/target'
        src_dir = '{}/{}'.format(parent_src_path, derive_sub_folder_unique_name)
        if len(child_dest_path) == 0:  
            src_dir = '{}/{}/{}'.format(parent_src_path, derive_sub_folder_unique_name, child_src_path)
            
        # Get the directory of all the files to be read from
        #file_location = os.path.join(src_dir, '*.xml')
        files_src_dir = os.path.join(src_dir, '*{}.{}'.format(pattern, file_type))
        # get all the file names and their paths
        filenames = glob.glob(files_src_dir)
        
        # copy files from multi source to one dest
        for file in filenames:
            #shutil.copy(file, 'checkstyleincompletesnippets_java')
            if file_need_unique_name == True:
                #https://stackoverflow.com/questions/678236/how-to-get-the-filename-without-the-extension-from-a-path-in-python
                newfile ='{}{}.{}'.format(os.path.splitext(file)[0], rank, file_type)
                # rename file to a have the a unique name
                os.rename(file, newfile)
                # copy the file
                shutil.copy(newfile, dest_path)
                # reverse the name
                os.rename(newfile, file)
            else:
                shutil.copy(file, dest_path)
            
            
    

# copy files from multiple folders to one single folder
cp_files_fm_sorce_wt_multi_subfolders_to_single_dst_folder()

print('Rank {} successfully copied -:)'.format(rank))




